#+TITLE: HTTP applications are just a Kleisli function from a streaming request to a polymorphic effect of a streaming response.
#+SUBTITLE: So what's the problem?
#+AUTHOR: Ross A. Baker
#+DATE:	<2018-03-20 Tue>

Debuted at the March, 2018 IndyScala.  Delivered at the [[https://typelevel.org/event/2018-03-summit-boston/][2018 Typelevel Summit, Boston]].

* Abstract

[[https://http4s.org/][http4s]] embraces ~cats.data.Kleisli~ for service definitions and ~fs2.Stream~ for payload processing. With its foundation on these simple types, we’ll take a whirlwind tour of how http4s can:

- plug into your functional business logic
- snap together with other functional libraries
- relate servers to clients
- test with a simple function call
- run on multiple backends
- support multiple higher level DSLs

This talk will not make you an expert in http4s, but show that it’s a relatively short path to become one.

* Video

#+begin_export html
<iframe width="560" height="315" src="https://www.youtube.com/embed/urdtmx4h5LE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
#+end_export

* Slides

#+begin_export html
<iframe width="756" height="567" src="https://rossabaker.github.io/boston-http4s/#2" title="Slides"></iframe>
#+end_export

- [[https://rossabaker.github.io/boston-http4s/#2][Download]]
- [[https://github.com/rossabaker/boston-http4s][Source]]
